---
bibliography: references.bib
editor:
    markdown: 
      wrap: sentence
---

# Success

<!-- 
Projects should have a definition of done that is measurable, and a thorough understanding going in of what the risks are to delivery 
-->

In order to understand and evaluate the success of the `geotargets` project, it is worthwhile visiting our definitions of done and success, as well as exploring future work, and potential risks to the project.

## Definition of done

<!-- 
What does success look like? 
-->

Success in the `geotargets` project looks like supporting fundamental geospatial raster and vector operations for the `terra` and `sf` packages.
We will include examples of using these targets workflows for `terra` and `sf` in the form of vignettes, as well as link to existing repositories that demonstrate varying degrees of complexity in usage of `geotargets`.
See for example [demo-geotargets](https://github.com/njtierney/demo-geospatial-targets), and [map-ir-pipeline](https://github.com/idem-lab/map-ir-pipeline).

## Measuring success

```{=html}
<!-- 
How will we know when success is achieved, what markers can we use along the way 
-->
```
We will use GitHub issues to identify key tasks that require completing.
For example, identifying target components for rasters and vectors for the `terra` package were outlined in <https://github.com/njtierney/geotargets/issues/12>.
The pull requests that resolved this were linked in the issue.

We will ensure the package is has high test coverage of over 80% (currently test coverage is 97%).
This will make the package easier to maintain, as any breaking changes will be identified early.
We will use GitHub actions to ensure `geotargets` can be installed on windows, macOS, and linux.
High test coverage and GitHub actions together will indicate to users this package is reliable and well maintained, which will hopefully improve trust and user takeup.

Another way we will measure success is by community uptake.
If the project is used by the community then we will know that the project is successful, because it means it is solving a real need for the people using it.
We can measure this success via a few metrics such as GitHub stars, downloads from CRAN, and citations to the software.
Currently the project was created on 2024-03-03, and as of 2024-03-22 it has 35 stars.
This indicates that the project is already gathering interest from the community.

We will regularly engage with the community to see that we are meeting their needs in geospatial workflow management.
For example, posting on mastodon, responding to issues and discussions on GitHub, and delivering talks on using `geotargets` to local R communities.

## Future work

<!-- 
How could this be extended / developed in the future by yourself and/or the community in general?
-->

This work could be extended in the future by developing new geospatial target factories for other spatial formats.
For example, formats such as geoarrow, vapour, and geoparquet.

## Key risks

<!-- 
What sort of things could come up that can delay or break the project?

 - [ ] People
 - [ ] Processes
 - [ ] Tooling & Technology
 - [ ] Costs

-->

Some of the risks in this project are potential changes in geospatial technology.
Although it is unlikely that projects such as GDAL will produce breaking changes, if they do, we will need to make substantial changes.

We have decided to only support currently maintained geospatial projects.
For example, many people still use the `raster` package, but we have decided to avoid the risk of supporting `raster` as it is no longer actively maintained and has been superseded by `terra`.

We may encounter challenges that cannot be solved directly by `geotargets` and require changes to be made in dependencies such as `targets` or the geospatial packages we intend to support.
If these cases arise, we can open issues or offer pull requests, but ultimately such changes will be out of our control.
In these cases we will do our best to provide workarounds or offer documentation of such challenges to our users.

Another potential risk is key team members having other commitments arise that mean they may need to pause their work on the project temporarily.
We can protect against this risk by having more than one key team member who can contribute to the work.
This will reduce our "[bus factor](https://en.wikipedia.org/wiki/Bus_factor)".
We will also adopt professional standards for managing our project on git and GitHub.
This means that we will regularly push our work onto GitHub, so the work will not be at risk of not being available by way of only being on someone's specific machine.
